plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'pl.allegro.tech.build.axion-release' version '1.10.2'
    id 'com.github.ben-manes.versions' version '0.27.0'
}

group = 'com.github.michaelruocco'

scmVersion {
    versionCreator 'versionWithBranch'
    tag {
        prefix = 'gradle-postman-runner'
    }
}
project.version = scmVersion.version

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    compile 'com.moowork.gradle:gradle-node-plugin:1.3.1'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'com.google.code.gson:gson:2.8.6'

    testCompile 'com.github.tomakehurst:wiremock-jre8:2.25.1'
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

def gitUrl = "https://github.com/michaelruocco/gradle-postman-runner"
pluginBundle {
    website = gitUrl
    vcsUrl = "${gitUrl}.git"
    description = 'Gradle plugin to run postman'
    tags = ['postman', 'newman']

    plugins {
        gradlePostmanRunner {
            id = 'com.github.michaelruocco.gradle-postman-runner'
            displayName = 'Gradle plugin to run postman'
        }
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}